function [J,Jd] = Link2Jacobian(in1,in2)
%LINK2JACOBIAN
%    [J,JD] = LINK2JACOBIAN(IN1,IN2)

%    This function was generated by the Symbolic Math Toolbox version 8.1.
%    29-Nov-2020 17:42:39

p1_1 = in2(1);
p2_1 = in2(2);
q3 = in1(3,:);
q4 = in1(4,:);
qd3 = in1(10,:);
qd4 = in1(11,:);
t2 = sin(q3);
t3 = cos(q3);
t4 = cos(q4);
t5 = sin(q4);
t6 = conj(p1_1);
t7 = t3.*t5;
t8 = t2.*t4;
t9 = t7+t8;
t10 = conj(p2_1);
t11 = t2.*t5;
t13 = t3.*t4;
t12 = t11-t13;
t14 = t6.*(t11-t13);
J = reshape([1.0,0.0,0.0,1.0,t2.*(-1.9e1./1.0e2)-t6.*t9-t10.*t12,t3.*(-1.9e1./1.0e2)+t14-t9.*t10,-t6.*t9-t10.*t12,t14-t9.*t10,0.0,0.0,0.0,0.0,0.0,0.0],[2,7]);
if nargout > 1
    t15 = t6.*t12;
    t16 = t9.*t10;
    t17 = t6.*t9;
    t18 = t10.*(t11-t13);
    t19 = t17+t18;
    t20 = qd4.*t19;
    Jd = reshape([0.0,0.0,0.0,0.0,-qd3.*(t3.*(1.9e1./1.0e2)-t15+t16)+qd4.*(t15-t9.*t10),t20+qd3.*(t2.*(1.9e1./1.0e2)+t17+t18),qd3.*(t15-t16)+qd4.*(t15-t16),t20+qd3.*t19,0.0,0.0,0.0,0.0,0.0,0.0],[2,7]);
end
