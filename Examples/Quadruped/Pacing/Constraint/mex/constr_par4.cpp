/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
#ifdef __cplusplus
extern "C" {
#endif

/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) constr_par4_ ## ID
#endif

#include <math.h>
#include <string.h>
#ifdef MATLAB_MEX_FILE
#include <mex.h>
#endif

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_fill CASADI_PREFIX(fill)
#define casadi_from_mex CASADI_PREFIX(from_mex)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_to_mex CASADI_PREFIX(to_mex)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

void casadi_fill(casadi_real* x, casadi_int n, casadi_real alpha) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = alpha;
  }
}

#ifdef MATLAB_MEX_FILE
casadi_real* casadi_from_mex(const mxArray* p, casadi_real* y, const casadi_int* sp, casadi_real* w) {
  casadi_int nrow, ncol, is_sparse, c, k, p_nrow, p_ncol;
  const casadi_int *colind, *row;
  mwIndex *Jc, *Ir;
  const double* p_data;
  if (!mxIsDouble(p) || mxGetNumberOfDimensions(p)!=2)
    mexErrMsgIdAndTxt("Casadi:RuntimeError",
      "\"from_mex\" failed: Not a two-dimensional matrix of double precision.");
  nrow = *sp++;
  ncol = *sp++;
  colind = sp;
  row = sp+ncol+1;
  p_nrow = mxGetM(p);
  p_ncol = mxGetN(p);
  is_sparse = mxIsSparse(p);
  Jc = 0;
  Ir = 0;
  if (is_sparse) {
    Jc = mxGetJc(p);
    Ir = mxGetIr(p);
  }
  p_data = (const double*)mxGetData(p);
  if (p_nrow==1 && p_ncol==1) {
    casadi_int nnz;
    double v = is_sparse && Jc[1]==0 ? 0 : *p_data;
    nnz = sp[ncol];
    casadi_fill(y, nnz, v);
  } else {
    casadi_int tr = 0;
    if (nrow!=p_nrow || ncol!=p_ncol) {
      tr = nrow==p_ncol && ncol==p_nrow && (nrow==1 || ncol==1);
      if (!tr) mexErrMsgIdAndTxt("Casadi:RuntimeError",
                                 "\"from_mex\" failed: Dimension mismatch. "
                                 "Expected %d-by-%d, got %d-by-%d instead.",
                                 nrow, ncol, p_nrow, p_ncol);
    }
    if (is_sparse) {
      if (tr) {
        for (c=0; c<ncol; ++c)
          for (k=colind[c]; k<colind[c+1]; ++k) w[row[k]+c*nrow]=0;
        for (c=0; c<p_ncol; ++c)
          for (k=Jc[c]; k<(casadi_int) Jc[c+1]; ++k) w[c+Ir[k]*p_ncol] = p_data[k];
        for (c=0; c<ncol; ++c)
          for (k=colind[c]; k<colind[c+1]; ++k) y[k] = w[row[k]+c*nrow];
      } else {
        for (c=0; c<ncol; ++c) {
          for (k=colind[c]; k<colind[c+1]; ++k) w[row[k]]=0;
          for (k=Jc[c]; k<(casadi_int) Jc[c+1]; ++k) w[Ir[k]]=p_data[k];
          for (k=colind[c]; k<colind[c+1]; ++k) y[k]=w[row[k]];
        }
      }
    } else {
      for (c=0; c<ncol; ++c) {
        for (k=colind[c]; k<colind[c+1]; ++k) {
          y[k] = p_data[row[k]+c*nrow];
        }
      }
    }
  }
  return y;
}

#endif

#define casadi_to_double(x) ((double) x)

#ifdef MATLAB_MEX_FILE
mxArray* casadi_to_mex(const casadi_int* sp, const casadi_real* x) {
  casadi_int nrow, ncol, c, k;
#ifndef CASADI_MEX_NO_SPARSE
  casadi_int nnz;
#endif
  const casadi_int *colind, *row;
  mxArray *p;
  double *d;
#ifndef CASADI_MEX_NO_SPARSE
  casadi_int i;
  mwIndex *j;
#endif /* CASADI_MEX_NO_SPARSE */
  nrow = *sp++;
  ncol = *sp++;
  colind = sp;
  row = sp+ncol+1;
#ifndef CASADI_MEX_NO_SPARSE
  nnz = sp[ncol];
  if (nnz!=nrow*ncol) {
    p = mxCreateSparse(nrow, ncol, nnz, mxREAL);
    for (i=0, j=mxGetJc(p); i<=ncol; ++i) *j++ = *colind++;
    for (i=0, j=mxGetIr(p); i<nnz; ++i) *j++ = *row++;
    if (x) {
      d = (double*)mxGetData(p);
      for (i=0; i<nnz; ++i) *d++ = casadi_to_double(*x++);
    }
    return p;
  }
#endif /* CASADI_MEX_NO_SPARSE */
  p = mxCreateDoubleMatrix(nrow, ncol, mxREAL);
  if (x) {
    d = (double*)mxGetData(p);
    for (c=0; c<ncol; ++c) {
      for (k=colind[c]; k<colind[c+1]; ++k) {
        d[row[k]+c*nrow] = casadi_to_double(*x++);
      }
    }
  }
  return p;
}

#endif

static const casadi_int casadi_s0[22] = {18, 1, 0, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17};
static const casadi_int casadi_s1[55] = {1, 36, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

/* constr_par4:(i0[18])->(o0[1x36,16nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a100, a101, a102, a103, a104, a105, a106, a107, a108, a109, a11, a110, a111, a112, a113, a114, a115, a116, a117, a118, a119, a12, a120, a121, a122, a123, a124, a125, a126, a127, a128, a129, a13, a130, a131, a132, a133, a134, a135, a136, a137, a138, a139, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99;
  a0=1.;
  if (res[0]!=0) res[0][0]=a0;
  a0=arg[0]? arg[0][3] : 0;
  a1=cos(a0);
  a2=arg[0]? arg[0][5] : 0;
  a3=cos(a2);
  a4=arg[0]? arg[0][6] : 0;
  a5=cos(a4);
  a6=1.2246467991473532e-16;
  a7=arg[0]? arg[0][7] : 0;
  a8=sin(a7);
  a9=(a6*a8);
  a10=arg[0]? arg[0][8] : 0;
  a11=cos(a10);
  a12=arg[0]? arg[0][9] : 0;
  a13=cos(a12);
  a14=arg[0]? arg[0][10] : 0;
  a15=cos(a14);
  a16=arg[0]? arg[0][11] : 0;
  a17=cos(a16);
  a18=arg[0]? arg[0][12] : 0;
  a19=cos(a18);
  a20=arg[0]? arg[0][13] : 0;
  a21=cos(a20);
  a22=arg[0]? arg[0][14] : 0;
  a23=cos(a22);
  a24=arg[0]? arg[0][15] : 0;
  a25=cos(a24);
  a26=arg[0]? arg[0][16] : 0;
  a27=cos(a26);
  a28=-1.9500000000000001e-01;
  a29=arg[0]? arg[0][17] : 0;
  a30=cos(a29);
  a31=(a28*a30);
  a32=5.0000000000000000e-01;
  a33=2.0899999999999999e-01;
  a34=-2.0899999999999999e-01;
  a35=(a34*a30);
  a36=(a30*a35);
  a37=sin(a29);
  a38=(a34*a37);
  a39=(a37*a38);
  a36=(a36+a39);
  a36=(a33-a36);
  a36=(a32*a36);
  a31=(a31-a36);
  a36=(a27*a31);
  a39=sin(a26);
  a40=(a6*a39);
  a41=6.2000000000000000e-02;
  a42=(a41*a27);
  a43=(a40*a42);
  a44=(a6*a27);
  a45=(a41*a39);
  a46=(a44*a45);
  a43=(a43-a46);
  a43=(a32*a43);
  a36=(a36-a43);
  a43=(a28*a37);
  a46=(a30*a38);
  a47=(a37*a35);
  a46=(a46-a47);
  a46=(a32*a46);
  a43=(a43-a46);
  a46=(a39*a43);
  a36=(a36-a46);
  a46=(a25*a36);
  a47=4.9000000000000002e-02;
  a48=sin(a24);
  a49=(a47*a48);
  a50=(a25*a49);
  a51=(a47*a25);
  a52=(a48*a51);
  a50=(a50-a52);
  a50=(a32*a50);
  a46=(a46-a50);
  a50=(a40*a31);
  a52=-9.2985106525035170e-34;
  a53=(a41*a27);
  a54=(a27*a53);
  a54=(a52-a54);
  a55=(a41*a39);
  a56=(a39*a55);
  a54=(a54-a56);
  a56=(a39*a45);
  a57=(a27*a42);
  a56=(a56+a57);
  a54=(a54-a56);
  a54=(a32*a54);
  a50=(a50-a54);
  a54=(a44*a43);
  a50=(a50+a54);
  a54=(a48*a50);
  a46=(a46+a54);
  a54=(a23*a46);
  a56=(a34*a23);
  a57=(a23*a56);
  a58=sin(a22);
  a59=(a34*a58);
  a60=(a58*a59);
  a57=(a57+a60);
  a57=(a33-a57);
  a57=(a32*a57);
  a60=(a44*a53);
  a61=-7.5928101547135900e-18;
  a60=(a60+a61);
  a62=(a40*a55);
  a60=(a60+a62);
  a60=(a32*a60);
  a62=1.9000000000000000e-01;
  a63=(a62*a48);
  a64=(a48*a63);
  a65=(a62*a25);
  a66=(a25*a65);
  a64=(a64+a66);
  a66=-1.9000000000000000e-01;
  a67=(a66*a25);
  a68=(a25*a67);
  a69=(a66*a48);
  a70=(a48*a69);
  a68=(a68+a70);
  a64=(a64-a68);
  a64=(a32*a64);
  a60=(a60-a64);
  a64=(a39*a31);
  a60=(a60-a64);
  a64=(a27*a43);
  a60=(a60-a64);
  a64=(a58*a60);
  a57=(a57+a64);
  a54=(a54-a57);
  a57=(a21*a54);
  a64=sin(a20);
  a68=(a6*a64);
  a70=-6.2000000000000000e-02;
  a71=(a70*a21);
  a72=(a68*a71);
  a73=(a6*a21);
  a74=(a70*a64);
  a75=(a73*a74);
  a72=(a72-a75);
  a72=(a32*a72);
  a57=(a57-a72);
  a72=(a23*a60);
  a75=(a23*a59);
  a76=(a58*a56);
  a75=(a75-a76);
  a75=(a32*a75);
  a72=(a72-a75);
  a75=(a58*a46);
  a72=(a72+a75);
  a75=(a64*a72);
  a57=(a57-a75);
  a75=(a19*a57);
  a76=-4.9000000000000002e-02;
  a77=sin(a18);
  a78=(a76*a77);
  a79=(a19*a78);
  a80=(a76*a19);
  a81=(a77*a80);
  a79=(a79-a81);
  a79=(a32*a79);
  a75=(a75-a79);
  a79=(a68*a54);
  a81=9.2985106525035170e-34;
  a82=(a70*a21);
  a83=(a21*a82);
  a83=(a81-a83);
  a84=(a70*a64);
  a85=(a64*a84);
  a83=(a83-a85);
  a85=(a64*a74);
  a86=(a21*a71);
  a85=(a85+a86);
  a83=(a83-a85);
  a83=(a32*a83);
  a79=(a79-a83);
  a83=(a73*a72);
  a79=(a79+a83);
  a83=(a25*a50);
  a85=(a48*a49);
  a86=(a25*a51);
  a85=(a85+a86);
  a85=(a76-a85);
  a85=(a32*a85);
  a86=(a48*a36);
  a85=(a85+a86);
  a83=(a83-a85);
  a79=(a79-a83);
  a85=(a77*a79);
  a75=(a75+a85);
  a85=(a17*a75);
  a86=(a34*a17);
  a87=(a17*a86);
  a88=sin(a16);
  a89=(a34*a88);
  a90=(a88*a89);
  a87=(a87+a90);
  a87=(a33-a87);
  a87=(a32*a87);
  a85=(a85-a87);
  a87=(a73*a82);
  a90=7.5928101547135900e-18;
  a87=(a87+a90);
  a91=(a68*a84);
  a87=(a87+a91);
  a87=(a32*a87);
  a91=(a62*a77);
  a92=(a77*a91);
  a93=(a62*a19);
  a94=(a19*a93);
  a92=(a92+a94);
  a94=(a66*a19);
  a95=(a19*a94);
  a96=(a66*a77);
  a97=(a77*a96);
  a95=(a95+a97);
  a92=(a92-a95);
  a92=(a32*a92);
  a87=(a87-a92);
  a92=(a64*a54);
  a87=(a87-a92);
  a92=(a21*a72);
  a87=(a87-a92);
  a92=-1.2246467991473532e-16;
  a83=(a92*a83);
  a87=(a87+a83);
  a83=(a88*a87);
  a85=(a85-a83);
  a83=(a15*a85);
  a95=sin(a14);
  a97=(a6*a95);
  a98=(a41*a15);
  a99=(a97*a98);
  a100=(a6*a15);
  a101=(a41*a95);
  a102=(a100*a101);
  a99=(a99-a102);
  a99=(a32*a99);
  a83=(a83-a99);
  a99=(a88*a75);
  a102=(a17*a89);
  a103=(a88*a86);
  a102=(a102-a103);
  a102=(a32*a102);
  a99=(a99-a102);
  a102=(a17*a87);
  a99=(a99+a102);
  a102=(a95*a99);
  a83=(a83-a102);
  a102=(a13*a83);
  a103=sin(a12);
  a104=(a47*a103);
  a105=(a13*a104);
  a106=(a47*a13);
  a107=(a103*a106);
  a105=(a105-a107);
  a105=(a32*a105);
  a102=(a102-a105);
  a105=(a97*a85);
  a107=(a41*a15);
  a108=(a15*a107);
  a52=(a52-a108);
  a108=(a41*a95);
  a109=(a95*a108);
  a52=(a52-a109);
  a109=(a95*a101);
  a110=(a15*a98);
  a109=(a109+a110);
  a52=(a52-a109);
  a52=(a32*a52);
  a109=(a19*a79);
  a110=(a77*a78);
  a111=(a19*a80);
  a110=(a110+a111);
  a110=(a47-a110);
  a110=(a32*a110);
  a111=(a77*a57);
  a110=(a110+a111);
  a109=(a109-a110);
  a52=(a52+a109);
  a105=(a105-a52);
  a52=(a100*a99);
  a105=(a105+a52);
  a52=(a103*a105);
  a102=(a102+a52);
  a52=(a11*a102);
  a110=(a34*a11);
  a111=(a11*a110);
  a112=sin(a10);
  a113=(a34*a112);
  a114=(a112*a113);
  a111=(a111+a114);
  a33=(a33-a111);
  a33=(a32*a33);
  a111=(a100*a107);
  a111=(a111+a61);
  a61=(a97*a108);
  a111=(a111+a61);
  a111=(a32*a111);
  a61=(a66*a103);
  a114=(a103*a61);
  a115=(a66*a13);
  a116=(a13*a115);
  a114=(a114+a116);
  a116=(a62*a13);
  a117=(a13*a116);
  a118=(a62*a103);
  a119=(a103*a118);
  a117=(a117+a119);
  a114=(a114-a117);
  a114=(a32*a114);
  a111=(a111-a114);
  a109=(a92*a109);
  a111=(a111+a109);
  a109=(a95*a85);
  a111=(a111-a109);
  a109=(a15*a99);
  a111=(a111-a109);
  a109=(a112*a111);
  a33=(a33+a109);
  a52=(a52-a33);
  a33=(a9*a52);
  a109=cos(a7);
  a114=(a70*a109);
  a117=(a109*a114);
  a81=(a81-a117);
  a117=(a70*a8);
  a119=(a8*a117);
  a81=(a81-a119);
  a119=(a70*a8);
  a120=(a8*a119);
  a121=(a70*a109);
  a122=(a109*a121);
  a120=(a120+a122);
  a81=(a81-a120);
  a81=(a32*a81);
  a33=(a33-a81);
  a81=(a6*a109);
  a120=(a11*a111);
  a122=(a11*a113);
  a123=(a112*a110);
  a122=(a122-a123);
  a122=(a32*a122);
  a120=(a120-a122);
  a122=(a112*a102);
  a120=(a120+a122);
  a122=(a81*a120);
  a33=(a33+a122);
  a122=(a13*a105);
  a123=(a103*a104);
  a124=(a13*a106);
  a123=(a123+a124);
  a123=(a76-a123);
  a123=(a32*a123);
  a124=(a103*a83);
  a123=(a123+a124);
  a122=(a122-a123);
  a33=(a33-a122);
  a123=(a5*a33);
  a124=sin(a4);
  a125=(a76*a124);
  a126=(a124*a125);
  a127=(a76*a5);
  a128=(a5*a127);
  a126=(a126+a128);
  a126=(a47-a126);
  a126=(a32*a126);
  a128=(a109*a52);
  a129=(a9*a121);
  a130=(a81*a119);
  a129=(a129-a130);
  a129=(a32*a129);
  a128=(a128-a129);
  a129=(a8*a120);
  a128=(a128-a129);
  a129=(a124*a128);
  a126=(a126+a129);
  a123=(a123-a126);
  a126=(a3*a123);
  a129=sin(a2);
  a130=(a81*a114);
  a130=(a130+a90);
  a90=(a9*a117);
  a130=(a130+a90);
  a130=(a32*a130);
  a90=(a66*a124);
  a131=(a124*a90);
  a132=(a66*a5);
  a133=(a5*a132);
  a131=(a131+a133);
  a133=(a62*a5);
  a134=(a5*a133);
  a135=(a62*a124);
  a136=(a124*a135);
  a134=(a134+a136);
  a131=(a131-a134);
  a131=(a32*a131);
  a130=(a130-a131);
  a131=(a8*a52);
  a130=(a130-a131);
  a131=(a109*a120);
  a130=(a130-a131);
  a122=(a92*a122);
  a130=(a130+a122);
  a122=(a129*a130);
  a126=(a126+a122);
  a1=(a1*a126);
  a126=sin(a0);
  a122=arg[0]? arg[0][4] : 0;
  a131=cos(a122);
  a134=(a5*a128);
  a136=(a5*a125);
  a137=(a124*a127);
  a136=(a136-a137);
  a136=(a32*a136);
  a134=(a134-a136);
  a136=(a124*a33);
  a134=(a134+a136);
  a136=(a131*a134);
  a137=sin(a122);
  a138=(a129*a123);
  a139=(a3*a130);
  a138=(a138-a139);
  a139=(a137*a138);
  a136=(a136+a139);
  a126=(a126*a136);
  a1=(a1-a126);
  if (res[0]!=0) res[0][1]=a1;
  a1=cos(a122);
  a126=cos(a0);
  a138=(a126*a138);
  a1=(a1*a138);
  a122=sin(a122);
  a134=(a126*a134);
  a122=(a122*a134);
  a1=(a1-a122);
  if (res[0]!=0) res[0][2]=a1;
  a1=cos(a2);
  a137=(a126*a137);
  a122=(a137*a123);
  a0=sin(a0);
  a134=(a0*a130);
  a122=(a122+a134);
  a1=(a1*a122);
  a2=sin(a2);
  a123=(a0*a123);
  a130=(a137*a130);
  a123=(a123-a130);
  a2=(a2*a123);
  a1=(a1-a2);
  if (res[0]!=0) res[0][3]=a1;
  a1=cos(a4);
  a126=(a126*a131);
  a131=(a32*a126);
  a2=(a127*a131);
  a123=(a137*a129);
  a130=(a0*a3);
  a123=(a123+a130);
  a130=(a32*a123);
  a122=(a125*a130);
  a2=(a2+a122);
  a122=(a124*a130);
  a134=(a5*a131);
  a122=(a122-a134);
  a122=(a76*a122);
  a2=(a2+a122);
  a0=(a0*a129);
  a137=(a137*a3);
  a0=(a0-a137);
  a137=(a32*a0);
  a135=(a135*a137);
  a2=(a2+a135);
  a135=(a124*a137);
  a135=(a62*a135);
  a2=(a2+a135);
  a90=(a90*a137);
  a2=(a2-a90);
  a90=(a124*a137);
  a90=(a66*a90);
  a2=(a2-a90);
  a90=(a123*a128);
  a2=(a2-a90);
  a90=(a126*a33);
  a2=(a2+a90);
  a1=(a1*a2);
  a4=sin(a4);
  a127=(a127*a130);
  a125=(a125*a131);
  a127=(a127-a125);
  a131=(a124*a131);
  a130=(a5*a130);
  a131=(a131+a130);
  a131=(a76*a131);
  a127=(a127+a131);
  a133=(a133*a137);
  a127=(a127+a133);
  a133=(a5*a137);
  a133=(a62*a133);
  a127=(a127+a133);
  a132=(a132*a137);
  a127=(a127-a132);
  a137=(a5*a137);
  a137=(a66*a137);
  a127=(a127-a137);
  a128=(a126*a128);
  a127=(a127+a128);
  a33=(a123*a33);
  a127=(a127+a33);
  a4=(a4*a127);
  a1=(a1-a4);
  if (res[0]!=0) res[0][4]=a1;
  a1=cos(a7);
  a4=(a123*a5);
  a127=(a126*a124);
  a4=(a4+a127);
  a127=(a32*a4);
  a33=(a119*a127);
  a126=(a126*a5);
  a123=(a123*a124);
  a126=(a126-a123);
  a123=(a32*a126);
  a124=(a81*a123);
  a5=(a8*a127);
  a124=(a124+a5);
  a124=(a70*a124);
  a33=(a33+a124);
  a124=(a117*a127);
  a33=(a33+a124);
  a124=(a8*a127);
  a5=(a32*a0);
  a128=(a9*a5);
  a124=(a124+a128);
  a124=(a70*a124);
  a33=(a33+a124);
  a124=(a0*a52);
  a33=(a33-a124);
  a117=(a117*a5);
  a124=(a121*a123);
  a117=(a117-a124);
  a124=(a4*a52);
  a117=(a117+a124);
  a117=(a6*a117);
  a33=(a33+a117);
  a117=(a126*a120);
  a33=(a33-a117);
  a1=(a1*a33);
  a7=sin(a7);
  a121=(a121*a127);
  a33=(a109*a127);
  a117=(a9*a123);
  a33=(a33-a117);
  a33=(a70*a33);
  a121=(a121+a33);
  a33=(a114*a127);
  a121=(a121+a33);
  a127=(a109*a127);
  a33=(a81*a5);
  a127=(a127+a33);
  a127=(a70*a127);
  a121=(a121+a127);
  a52=(a126*a52);
  a121=(a121+a52);
  a52=(a0*a120);
  a121=(a121-a52);
  a119=(a119*a123);
  a114=(a114*a5);
  a119=(a119+a114);
  a120=(a4*a120);
  a119=(a119+a120);
  a119=(a6*a119);
  a121=(a121+a119);
  a7=(a7*a121);
  a1=(a1-a7);
  if (res[0]!=0) res[0][5]=a1;
  a1=cos(a10);
  a9=(a4*a9);
  a7=(a0*a8);
  a9=(a9-a7);
  a7=(a126*a109);
  a9=(a9+a7);
  a7=(a32*a9);
  a121=(a113*a7);
  a81=(a4*a81);
  a109=(a0*a109);
  a81=(a81-a109);
  a126=(a126*a8);
  a81=(a81-a126);
  a126=(a32*a81);
  a8=(a110*a126);
  a121=(a121+a8);
  a8=(a112*a7);
  a109=(a11*a126);
  a8=(a8-a109);
  a8=(a34*a8);
  a121=(a121+a8);
  a8=(a9*a111);
  a121=(a121-a8);
  a8=(a81*a102);
  a121=(a121+a8);
  a1=(a1*a121);
  a10=sin(a10);
  a110=(a110*a7);
  a7=(a11*a7);
  a121=(a112*a126);
  a7=(a7+a121);
  a7=(a34*a7);
  a110=(a110+a7);
  a113=(a113*a126);
  a110=(a110-a113);
  a111=(a81*a111);
  a110=(a110+a111);
  a102=(a9*a102);
  a110=(a110+a102);
  a10=(a10*a110);
  a1=(a1-a10);
  if (res[0]!=0) res[0][6]=a1;
  a1=cos(a12);
  a10=(a81*a112);
  a110=(a9*a11);
  a10=(a10+a110);
  a110=(a32*a10);
  a102=(a106*a110);
  a0=(a92*a0);
  a0=(a0-a4);
  a4=(a32*a0);
  a111=(a104*a4);
  a102=(a102+a111);
  a111=(a103*a4);
  a113=(a13*a110);
  a111=(a111-a113);
  a111=(a47*a111);
  a102=(a102+a111);
  a81=(a81*a11);
  a9=(a9*a112);
  a81=(a81-a9);
  a9=(a32*a81);
  a118=(a118*a9);
  a102=(a102+a118);
  a118=(a103*a9);
  a118=(a62*a118);
  a102=(a102+a118);
  a61=(a61*a9);
  a102=(a102-a61);
  a61=(a103*a9);
  a61=(a66*a61);
  a102=(a102-a61);
  a61=(a0*a83);
  a102=(a102-a61);
  a61=(a10*a105);
  a102=(a102+a61);
  a1=(a1*a102);
  a12=sin(a12);
  a106=(a106*a4);
  a104=(a104*a110);
  a106=(a106-a104);
  a110=(a103*a110);
  a4=(a13*a4);
  a110=(a110+a4);
  a110=(a47*a110);
  a106=(a106+a110);
  a116=(a116*a9);
  a106=(a106+a116);
  a116=(a13*a9);
  a116=(a62*a116);
  a106=(a106+a116);
  a115=(a115*a9);
  a106=(a106-a115);
  a9=(a13*a9);
  a9=(a66*a9);
  a106=(a106-a9);
  a83=(a10*a83);
  a106=(a106+a83);
  a105=(a0*a105);
  a106=(a106+a105);
  a12=(a12*a106);
  a1=(a1-a12);
  if (res[0]!=0) res[0][7]=a1;
  a1=cos(a14);
  a12=(a0*a13);
  a106=(a10*a103);
  a12=(a12+a106);
  a106=(a32*a12);
  a105=(a101*a106);
  a10=(a10*a13);
  a0=(a0*a103);
  a10=(a10-a0);
  a0=(a32*a10);
  a103=(a100*a0);
  a13=(a95*a106);
  a103=(a103+a13);
  a103=(a41*a103);
  a105=(a105+a103);
  a103=(a108*a106);
  a105=(a105+a103);
  a103=(a95*a106);
  a13=(a32*a81);
  a83=(a97*a13);
  a103=(a103+a83);
  a103=(a41*a103);
  a105=(a105+a103);
  a103=(a81*a85);
  a105=(a105-a103);
  a108=(a108*a13);
  a103=(a98*a0);
  a108=(a108-a103);
  a103=(a12*a85);
  a108=(a108+a103);
  a108=(a6*a108);
  a105=(a105+a108);
  a108=(a10*a99);
  a105=(a105-a108);
  a1=(a1*a105);
  a14=sin(a14);
  a98=(a98*a106);
  a105=(a15*a106);
  a108=(a97*a0);
  a105=(a105-a108);
  a105=(a41*a105);
  a98=(a98+a105);
  a105=(a107*a106);
  a98=(a98+a105);
  a106=(a15*a106);
  a105=(a100*a13);
  a106=(a106+a105);
  a106=(a41*a106);
  a98=(a98+a106);
  a85=(a10*a85);
  a98=(a98+a85);
  a85=(a81*a99);
  a98=(a98-a85);
  a101=(a101*a0);
  a107=(a107*a13);
  a101=(a101+a107);
  a99=(a12*a99);
  a101=(a101+a99);
  a101=(a6*a101);
  a98=(a98+a101);
  a14=(a14*a98);
  a1=(a1-a14);
  if (res[0]!=0) res[0][8]=a1;
  a1=cos(a16);
  a97=(a12*a97);
  a14=(a81*a95);
  a97=(a97-a14);
  a14=(a10*a15);
  a97=(a97+a14);
  a14=(a32*a97);
  a98=(a89*a14);
  a100=(a12*a100);
  a15=(a81*a15);
  a100=(a100-a15);
  a10=(a10*a95);
  a100=(a100-a10);
  a10=(a32*a100);
  a95=(a86*a10);
  a98=(a98+a95);
  a95=(a88*a14);
  a15=(a17*a10);
  a95=(a95-a15);
  a95=(a34*a95);
  a98=(a98+a95);
  a95=(a100*a75);
  a98=(a98+a95);
  a95=(a97*a87);
  a98=(a98-a95);
  a1=(a1*a98);
  a16=sin(a16);
  a86=(a86*a14);
  a14=(a17*a14);
  a98=(a88*a10);
  a14=(a14+a98);
  a14=(a34*a14);
  a86=(a86+a14);
  a89=(a89*a10);
  a86=(a86-a89);
  a75=(a97*a75);
  a86=(a86+a75);
  a87=(a100*a87);
  a86=(a86+a87);
  a16=(a16*a86);
  a1=(a1-a16);
  if (res[0]!=0) res[0][9]=a1;
  a1=cos(a18);
  a16=(a100*a88);
  a86=(a97*a17);
  a16=(a16+a86);
  a86=(a32*a16);
  a87=(a80*a86);
  a81=(a92*a81);
  a81=(a81-a12);
  a12=(a32*a81);
  a75=(a78*a12);
  a87=(a87+a75);
  a75=(a77*a12);
  a89=(a19*a86);
  a75=(a75-a89);
  a75=(a76*a75);
  a87=(a87+a75);
  a100=(a100*a17);
  a97=(a97*a88);
  a100=(a100-a97);
  a97=(a32*a100);
  a96=(a96*a97);
  a87=(a87+a96);
  a96=(a77*a97);
  a96=(a66*a96);
  a87=(a87+a96);
  a91=(a91*a97);
  a87=(a87-a91);
  a91=(a77*a97);
  a91=(a62*a91);
  a87=(a87-a91);
  a91=(a81*a57);
  a87=(a87-a91);
  a91=(a16*a79);
  a87=(a87+a91);
  a1=(a1*a87);
  a18=sin(a18);
  a80=(a80*a12);
  a78=(a78*a86);
  a80=(a80-a78);
  a86=(a77*a86);
  a12=(a19*a12);
  a86=(a86+a12);
  a76=(a76*a86);
  a80=(a80+a76);
  a94=(a94*a97);
  a80=(a80+a94);
  a94=(a19*a97);
  a94=(a66*a94);
  a80=(a80+a94);
  a93=(a93*a97);
  a80=(a80-a93);
  a97=(a19*a97);
  a97=(a62*a97);
  a80=(a80-a97);
  a57=(a16*a57);
  a80=(a80+a57);
  a79=(a81*a79);
  a80=(a80+a79);
  a18=(a18*a80);
  a1=(a1-a18);
  if (res[0]!=0) res[0][10]=a1;
  a1=cos(a20);
  a18=(a81*a19);
  a80=(a16*a77);
  a18=(a18+a80);
  a80=(a32*a18);
  a79=(a74*a80);
  a16=(a16*a19);
  a81=(a81*a77);
  a16=(a16-a81);
  a81=(a32*a16);
  a77=(a73*a81);
  a19=(a64*a80);
  a77=(a77+a19);
  a77=(a70*a77);
  a79=(a79+a77);
  a77=(a84*a80);
  a79=(a79+a77);
  a77=(a64*a80);
  a19=(a32*a100);
  a57=(a68*a19);
  a77=(a77+a57);
  a77=(a70*a77);
  a79=(a79+a77);
  a77=(a100*a54);
  a79=(a79-a77);
  a84=(a84*a19);
  a77=(a71*a81);
  a84=(a84-a77);
  a77=(a18*a54);
  a84=(a84+a77);
  a84=(a6*a84);
  a79=(a79+a84);
  a84=(a16*a72);
  a79=(a79-a84);
  a1=(a1*a79);
  a20=sin(a20);
  a71=(a71*a80);
  a79=(a21*a80);
  a84=(a68*a81);
  a79=(a79-a84);
  a79=(a70*a79);
  a71=(a71+a79);
  a79=(a82*a80);
  a71=(a71+a79);
  a80=(a21*a80);
  a79=(a73*a19);
  a80=(a80+a79);
  a70=(a70*a80);
  a71=(a71+a70);
  a54=(a16*a54);
  a71=(a71+a54);
  a54=(a100*a72);
  a71=(a71-a54);
  a74=(a74*a81);
  a82=(a82*a19);
  a74=(a74+a82);
  a72=(a18*a72);
  a74=(a74+a72);
  a74=(a6*a74);
  a71=(a71+a74);
  a20=(a20*a71);
  a1=(a1-a20);
  if (res[0]!=0) res[0][11]=a1;
  a1=cos(a22);
  a68=(a18*a68);
  a20=(a100*a64);
  a68=(a68-a20);
  a20=(a16*a21);
  a68=(a68+a20);
  a20=(a32*a68);
  a71=(a59*a20);
  a73=(a18*a73);
  a21=(a100*a21);
  a73=(a73-a21);
  a16=(a16*a64);
  a73=(a73-a16);
  a16=(a32*a73);
  a64=(a56*a16);
  a71=(a71+a64);
  a64=(a58*a20);
  a21=(a23*a16);
  a64=(a64-a21);
  a64=(a34*a64);
  a71=(a71+a64);
  a64=(a68*a60);
  a71=(a71-a64);
  a64=(a73*a46);
  a71=(a71+a64);
  a1=(a1*a71);
  a22=sin(a22);
  a56=(a56*a20);
  a20=(a23*a20);
  a71=(a58*a16);
  a20=(a20+a71);
  a20=(a34*a20);
  a56=(a56+a20);
  a59=(a59*a16);
  a56=(a56-a59);
  a60=(a73*a60);
  a56=(a56+a60);
  a46=(a68*a46);
  a56=(a56+a46);
  a22=(a22*a56);
  a1=(a1-a22);
  if (res[0]!=0) res[0][12]=a1;
  a1=cos(a24);
  a22=(a73*a58);
  a56=(a68*a23);
  a22=(a22+a56);
  a56=(a32*a22);
  a46=(a51*a56);
  a92=(a92*a100);
  a92=(a92-a18);
  a18=(a32*a92);
  a100=(a49*a18);
  a46=(a46+a100);
  a100=(a48*a18);
  a60=(a25*a56);
  a100=(a100-a60);
  a100=(a47*a100);
  a46=(a46+a100);
  a73=(a73*a23);
  a68=(a68*a58);
  a73=(a73-a68);
  a68=(a32*a73);
  a69=(a69*a68);
  a46=(a46+a69);
  a69=(a48*a68);
  a69=(a66*a69);
  a46=(a46+a69);
  a63=(a63*a68);
  a46=(a46-a63);
  a63=(a48*a68);
  a63=(a62*a63);
  a46=(a46-a63);
  a63=(a92*a36);
  a46=(a46-a63);
  a63=(a22*a50);
  a46=(a46+a63);
  a1=(a1*a46);
  a24=sin(a24);
  a51=(a51*a18);
  a49=(a49*a56);
  a51=(a51-a49);
  a56=(a48*a56);
  a18=(a25*a18);
  a56=(a56+a18);
  a47=(a47*a56);
  a51=(a51+a47);
  a67=(a67*a68);
  a51=(a51+a67);
  a67=(a25*a68);
  a66=(a66*a67);
  a51=(a51+a66);
  a65=(a65*a68);
  a51=(a51-a65);
  a68=(a25*a68);
  a62=(a62*a68);
  a51=(a51-a62);
  a36=(a22*a36);
  a51=(a51+a36);
  a50=(a92*a50);
  a51=(a51+a50);
  a24=(a24*a51);
  a1=(a1-a24);
  if (res[0]!=0) res[0][13]=a1;
  a1=cos(a26);
  a24=(a92*a25);
  a51=(a22*a48);
  a24=(a24+a51);
  a51=(a32*a24);
  a50=(a45*a51);
  a22=(a22*a25);
  a92=(a92*a48);
  a22=(a22-a92);
  a92=(a32*a22);
  a48=(a44*a92);
  a25=(a39*a51);
  a48=(a48+a25);
  a48=(a41*a48);
  a50=(a50+a48);
  a48=(a55*a51);
  a50=(a50+a48);
  a48=(a39*a51);
  a25=(a32*a73);
  a36=(a40*a25);
  a48=(a48+a36);
  a48=(a41*a48);
  a50=(a50+a48);
  a48=(a73*a31);
  a50=(a50-a48);
  a55=(a55*a25);
  a48=(a42*a92);
  a55=(a55-a48);
  a48=(a24*a31);
  a55=(a55+a48);
  a55=(a6*a55);
  a50=(a50+a55);
  a55=(a22*a43);
  a50=(a50-a55);
  a1=(a1*a50);
  a26=sin(a26);
  a42=(a42*a51);
  a50=(a27*a51);
  a55=(a40*a92);
  a50=(a50-a55);
  a50=(a41*a50);
  a42=(a42+a50);
  a50=(a53*a51);
  a42=(a42+a50);
  a51=(a27*a51);
  a50=(a44*a25);
  a51=(a51+a50);
  a41=(a41*a51);
  a42=(a42+a41);
  a31=(a22*a31);
  a42=(a42+a31);
  a31=(a73*a43);
  a42=(a42-a31);
  a45=(a45*a92);
  a53=(a53*a25);
  a45=(a45+a53);
  a43=(a24*a43);
  a45=(a45+a43);
  a6=(a6*a45);
  a42=(a42+a6);
  a26=(a26*a42);
  a1=(a1-a26);
  if (res[0]!=0) res[0][14]=a1;
  a1=cos(a29);
  a40=(a24*a40);
  a26=(a73*a39);
  a40=(a40-a26);
  a26=(a22*a27);
  a40=(a40+a26);
  a26=(a32*a40);
  a42=(a38*a26);
  a24=(a24*a44);
  a73=(a73*a27);
  a24=(a24-a73);
  a22=(a22*a39);
  a24=(a24-a22);
  a32=(a32*a24);
  a22=(a35*a32);
  a42=(a42+a22);
  a22=(a37*a26);
  a39=(a30*a32);
  a22=(a22-a39);
  a22=(a34*a22);
  a42=(a42+a22);
  a24=(a28*a24);
  a42=(a42+a24);
  a1=(a1*a42);
  a29=sin(a29);
  a35=(a35*a26);
  a30=(a30*a26);
  a37=(a37*a32);
  a30=(a30+a37);
  a34=(a34*a30);
  a35=(a35+a34);
  a38=(a38*a32);
  a35=(a35-a38);
  a28=(a28*a40);
  a35=(a35+a28);
  a29=(a29*a35);
  a1=(a1-a29);
  if (res[0]!=0) res[0][15]=a1;
  return 0;
}

CASADI_SYMBOL_EXPORT int constr_par4(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

CASADI_SYMBOL_EXPORT int constr_par4_alloc_mem(void) {
  return 0;
}

CASADI_SYMBOL_EXPORT int constr_par4_init_mem(int mem) {
  return 0;
}

CASADI_SYMBOL_EXPORT void constr_par4_free_mem(int mem) {
}

CASADI_SYMBOL_EXPORT int constr_par4_checkout(void) {
  return 0;
}

CASADI_SYMBOL_EXPORT void constr_par4_release(int mem) {
}

CASADI_SYMBOL_EXPORT void constr_par4_incref(void) {
}

CASADI_SYMBOL_EXPORT void constr_par4_decref(void) {
}

CASADI_SYMBOL_EXPORT casadi_int constr_par4_n_in(void) { return 1;}

CASADI_SYMBOL_EXPORT casadi_int constr_par4_n_out(void) { return 1;}

CASADI_SYMBOL_EXPORT casadi_real constr_par4_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

CASADI_SYMBOL_EXPORT const char* constr_par4_name_in(casadi_int i){
  switch (i) {
    case 0: return "i0";
    default: return 0;
  }
}

CASADI_SYMBOL_EXPORT const char* constr_par4_name_out(casadi_int i){
  switch (i) {
    case 0: return "o0";
    default: return 0;
  }
}

CASADI_SYMBOL_EXPORT const casadi_int* constr_par4_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    default: return 0;
  }
}

CASADI_SYMBOL_EXPORT const casadi_int* constr_par4_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s1;
    default: return 0;
  }
}

CASADI_SYMBOL_EXPORT int constr_par4_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 1;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}

#ifdef MATLAB_MEX_FILE
void mex_constr_par4(int resc, mxArray *resv[], int argc, const mxArray *argv[]) {
  casadi_int i;
  casadi_real w[174];
  casadi_int *iw = 0;
  const casadi_real* arg[1] = {0};
  casadi_real* res[1] = {0};
  if (argc>1) mexErrMsgIdAndTxt("Casadi:RuntimeError","Evaluation of \"constr_par4\" failed. Too many input arguments (%d, max 1)", argc);
  if (resc>1) mexErrMsgIdAndTxt("Casadi:RuntimeError","Evaluation of \"constr_par4\" failed. Too many output arguments (%d, max 1)", resc);
  if (--argc>=0) arg[0] = casadi_from_mex(argv[0], w, casadi_s0, w+34);
  --resc;
  res[0] = w+18;
  i = constr_par4(arg, res, iw, w+34, 0);
  if (i) mexErrMsgIdAndTxt("Casadi:RuntimeError","Evaluation of \"constr_par4\" failed.");
  if (res[0]) resv[0] = casadi_to_mex(casadi_s1, res[0]);
}
#endif


#ifdef MATLAB_MEX_FILE
void mexFunction(int resc, mxArray *resv[], int argc, const mxArray *argv[]) {
  char buf[12];
  int buf_ok = argc > 0 && !mxGetString(*argv, buf, sizeof(buf));
  if (!buf_ok) {
    mex_constr_par4(resc, resv, argc, argv);
    return;
  } else if (strcmp(buf, "constr_par4")==0) {
    mex_constr_par4(resc, resv, argc-1, argv+1);
    return;
  }
  mexErrMsgTxt("First input should be a command string. Possible values: 'constr_par4'");
}
#endif
#ifdef __cplusplus
} /* extern "C" */
#endif
